/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2.presentation.administrador.listado;

import java.text.ParseException;
import java.util.ArrayList;
import proyecto2.presentation.solicitudes.listado.*;
import java.util.Observable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import proyecto2.Application;
import proyecto2.logic.Bien;
import proyecto2.logic.Labor;
import proyecto2.logic.Solicitud;

/**
 *
 * @author Rodrigo Meléndez
 */
public class AdministradorSolicitudView extends javax.swing.JInternalFrame implements java.util.Observer{
    AdministradorSolicitudController controller;
    AdministradorSolicitudModel model;
    
    public AdministradorSolicitudView() {
        super("",false,true);
        initComponents();
        //this.toSolicitudFromDependencia();
    }

    public AdministradorSolicitudController getController() {
        return controller;
    }

    public void setController(AdministradorSolicitudController controller) {
        this.controller = controller;
    }

    public AdministradorSolicitudModel getModel() {
        return model;
    }

    public void setModel(AdministradorSolicitudModel model) {
        this.model = model;
         model.addObserver(this);
    }
    //no hace falta por el momento
//    boolean validar(){
//        boolean error=false;
//        
//    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_Comprobante = new javax.swing.JLabel();
        text_Comprobante = new javax.swing.JTextField();
        button_Buscar = new javax.swing.JButton();
        button_Agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Solicitud = new javax.swing.JTable();
        button_Eliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_Comprobante.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        label_Comprobante.setText("Comprobante:");
        getContentPane().add(label_Comprobante, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 28, -1, -1));
        getContentPane().add(text_Comprobante, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 26, 102, -1));

        button_Buscar.setText("buscar");
        button_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_BuscarActionPerformed(evt);
            }
        });
        getContentPane().add(button_Buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 23, -1, -1));

        button_Agregar.setText("agregar");
        button_Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_AgregarActionPerformed(evt);
            }
        });
        getContentPane().add(button_Agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 80, 30));

        table_Solicitud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_Solicitud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_SolicitudMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_Solicitud);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 576, 90));

        button_Eliminar.setText("eliminar");
        button_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_EliminarActionPerformed(evt);
            }
        });
        getContentPane().add(button_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Solicitudes"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 127, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 690, 150));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_BuscarActionPerformed
        try{
            controller.buscar(this.toSolicitudFromSearch());
        }catch(Exception e){
             JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_button_BuscarActionPerformed

    private void button_AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_AgregarActionPerformed
        Application.SOLICITUD_CONTROLLER.getModel().setModoS(Application.MODO_AGREGAR);
        Application.SOLICITUD_CONTROLLER.show();
    }//GEN-LAST:event_button_AgregarActionPerformed

    private void table_SolicitudMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_SolicitudMouseClicked
        if(evt.getClickCount() == 2){
            int row = this.table_Solicitud.getSelectedRow();
            Solicitud solicitud = this.controller.getSeleccionada(row);
            if("Solicitud recibida".equals(solicitud.getEstado())){
                //int col = this.table_Bien.getSelectedColumn();
                Application.SOLICITUD_CONTROLLER.getModel().setModoS(Application.MODO_EDITAR);
                Application.SOLICITUD_CONTROLLER.getModel().setCurrentS(solicitud);
                Application.SOLICITUD_CONTROLLER.getModel().setListaBienes(new ArrayList<Bien>(solicitud.getBiens()));
                try {
                    Application.SOLICITUD_CONTROLLER.getView().modifica(solicitud);
                } catch (Exception ex) {
                    Logger.getLogger(AdministradorSolicitudView.class.getName()).log(Level.SEVERE, null, ex);
                }
                Application.SOLICITUD_CONTROLLER.show();
            }
            else{
                JOptionPane.showMessageDialog(this, "La solicitud ya fue aceptada, no es posible hacer cambios", "Información", JOptionPane.INFORMATION_MESSAGE); 
            }
        }
    }//GEN-LAST:event_table_SolicitudMouseClicked

    private void button_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_EliminarActionPerformed
        int row = this.table_Solicitud.getSelectedRow();
        
        try {
            controller.borrar(row);
        } catch (ParseException ex) {
            Logger.getLogger(AdministradorSolicitudView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_EliminarActionPerformed

       public void limpiarErrores(){
        this.label_Comprobante.setForeground(Application.COLOR_OK);
    }
    
    public void fromSolicitud(Solicitud filtro){
        text_Comprobante.setText(filtro.getComprobante());
    }
    
    Solicitud toSolicitudFromSearch(){
        Solicitud result = new Solicitud();
        result.setComprobante(text_Comprobante.getText());
        return result;
    }
    
    public void toSolicitudFromDependencia() throws Exception {
        //Labor labor = proyecto2.logic.ModelGeneral.instance().searchLabor(Application.LOGIN_CONTROLLER.getLoginModel().getCurrent().getFuncionario().getId());
        try{
        this.controller.buscarFromDependencia();
        } catch(Exception ex){ }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_Agregar;
    private javax.swing.JButton button_Buscar;
    private javax.swing.JButton button_Eliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_Comprobante;
    private javax.swing.JTable table_Solicitud;
    private javax.swing.JTextField text_Comprobante;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        this.limpiarErrores();
        Solicitud filtro = model.getFilter();
        this.fromSolicitud(filtro);
        table_Solicitud.setModel(model.getSolicitudes());
    }
}
